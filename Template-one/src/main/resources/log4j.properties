# Global logging configuration
log4j.rootLogger=ERROR, ooo #log4j.rootLogger = [ level ] , appenderName, appenderName, …其中，level 是日志记录的优先级，分为OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL或者您定义的级别。Log4j建议只使用四个级别，优 先级从高到低分别是ERROR、WARN、INFO、DEBUG。通过在这里定义的级别，您可以控制到应用程序中相应级别的日志信息的开关。

# MyBatis logging configuration...
log4j.logger.com.nf147.bookstore_ssm.dao=DEBUG

# 规则1,名字为 ooo，向标准输出 System.err/out
log4j.appender.ooo=org.apache.log4j.ConsoleAppender
log4j.appender.ooo.layout=org.apache.log4j.PatternLayout
log4j.appender.ooo.layout.ConversionPattern=%5p [%t] ~ %m%n

# 规则2，输出为文件
log4j.appender.000=org.apache.log4j.FileAppender
log4j.appender.000.File=d:/log/log.out
log4j.appender.000.layout=org.apache.log4j.PatternLayout
log4j.appender.000.layout.conversionPattern=%m %n

# 规则3，输出到数据库
log4j.appender.o0o=org.apache.log4j.jdbc.JDBCAppender
log4j.appender.o0o.URL=jdbc:mariadb://localhost/lagou
log4j.appender.o0o.driver=org.mariadb.jdbc.Driver
log4j.appender.o0o.user=vip
log4j.appender.o0o.password=vip
log4j.appender.o0o.layout=org.apache.log4j.PatternLayout
log4j.appender.o0o.sql=INSERT INTO LOGS VALUES('%t')
